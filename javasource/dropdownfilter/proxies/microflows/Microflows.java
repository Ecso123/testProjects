// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package dropdownfilter.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the DropDownFilter module
	public static dropdownfilter.proxies.Country dS_getCountry(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("DropDownFilter.DS_getCountry").withParams(params).execute(context);
		return result == null ? null : dropdownfilter.proxies.Country.initialize(context, result);
	}
	public static java.util.List<dropdownfilter.proxies.Country> dS_Microflow(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("DropDownFilter.DS_Microflow").withParams(params).execute(context);
		java.util.List<dropdownfilter.proxies.Country> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(dropdownfilter.proxies.Country.initialize(context, obj));
		}
		return result;
	}
	public static dropdownfilter.proxies.Country dSS_Country(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("DropDownFilter.DSS_Country").withParams(params).execute(context);
		return result == null ? null : dropdownfilter.proxies.Country.initialize(context, result);
	}
	public static dropdownfilter.proxies.Continent getContinent(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("DropDownFilter.getContinent").withParams(params).execute(context);
		return result == null ? null : dropdownfilter.proxies.Continent.initialize(context, result);
	}
	public static void iVK_CreateSampleData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DropDownFilter.IVK_CreateSampleData").withParams(params).execute(context);
	}
}