// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package native_widgets.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Native_Widgets module
	public static void aCT_Badge_DeleteAll(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Badge_DeleteAll").withParams(params).execute(context);
	}
	public static void aCT_Badge_New(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Badge_New").withParams(params).execute(context);
	}
	public static void aCT_Entity_DeleteAll(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Entity_DeleteAll").withParams(params).execute(context);
	}
	public static void aCT_Entity_New(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Entity_New").withParams(params).execute(context);
	}
	public static void aCT_Maps_DeleteAll(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Maps_DeleteAll").withParams(params).execute(context);
	}
	public static void aCT_Maps_New(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Maps_New").withParams(params).execute(context);
	}
	public static void aCT_Progress_DeleteAll(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Progress_DeleteAll").withParams(params).execute(context);
	}
	public static void aCT_Rating_DeleteAll(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Rating_DeleteAll").withParams(params).execute(context);
	}
	public static void aCT_Rating_New(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Rating_New").withParams(params).execute(context);
	}
	public static void aCT_Slider_DeleteAll(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Slider_DeleteAll").withParams(params).execute(context);
	}
	public static void aCT_Slider_New(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_Slider_New").withParams(params).execute(context);
	}
	public static void aCT_ToggleButtons_DeleteAll(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_ToggleButtons_DeleteAll").withParams(params).execute(context);
	}
	public static void aCT_ToggleButtons_New(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_ToggleButtons_New").withParams(params).execute(context);
	}
	public static void aCT_User_DeleteAll(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_User_DeleteAll").withParams(params).execute(context);
	}
	public static void aCT_User_New(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Native_Widgets.ACT_User_New").withParams(params).execute(context);
	}
	public static system.proxies.User dS_GetSystemUser(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Native_Widgets.DS_GetSystemUser").withParams(params).execute(context);
		return result == null ? null : system.proxies.User.initialize(context, result);
	}
}