// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package native_widgets.proxies;

public class ToggleButtons
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject toggleButtonsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Native_Widgets.ToggleButtons";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		MapType("MapType"),
		DevMode("DevMode");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ToggleButtons(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Native_Widgets.ToggleButtons"));
	}

	protected ToggleButtons(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject toggleButtonsMendixObject)
	{
		if (toggleButtonsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Native_Widgets.ToggleButtons", toggleButtonsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Native_Widgets.ToggleButtons");

		this.toggleButtonsMendixObject = toggleButtonsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ToggleButtons.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static native_widgets.proxies.ToggleButtons initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return native_widgets.proxies.ToggleButtons.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static native_widgets.proxies.ToggleButtons initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new native_widgets.proxies.ToggleButtons(context, mendixObject);
	}

	public static native_widgets.proxies.ToggleButtons load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return native_widgets.proxies.ToggleButtons.initialize(context, mendixObject);
	}

	public static java.util.List<native_widgets.proxies.ToggleButtons> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<native_widgets.proxies.ToggleButtons> result = new java.util.ArrayList<native_widgets.proxies.ToggleButtons>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Native_Widgets.ToggleButtons" + xpathConstraint))
			result.add(native_widgets.proxies.ToggleButtons.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of MapType
	 * @param maptype
	 */
	public final atlas_designsystem.proxies.Enumeration_2 getMapType()
	{
		return getMapType(getContext());
	}

	/**
	 * @param context
	 * @return value of MapType
	 */
	public final atlas_designsystem.proxies.Enumeration_2 getMapType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.MapType.toString());
		if (obj == null)
			return null;

		return atlas_designsystem.proxies.Enumeration_2.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of MapType
	 * @param maptype
	 */
	public final void setMapType(atlas_designsystem.proxies.Enumeration_2 maptype)
	{
		setMapType(getContext(), maptype);
	}

	/**
	 * Set value of MapType
	 * @param context
	 * @param maptype
	 */
	public final void setMapType(com.mendix.systemwideinterfaces.core.IContext context, atlas_designsystem.proxies.Enumeration_2 maptype)
	{
		if (maptype != null)
			getMendixObject().setValue(context, MemberNames.MapType.toString(), maptype.toString());
		else
			getMendixObject().setValue(context, MemberNames.MapType.toString(), null);
	}

	/**
	 * @return value of DevMode
	 */
	public final java.lang.Boolean getDevMode()
	{
		return getDevMode(getContext());
	}

	/**
	 * @param context
	 * @return value of DevMode
	 */
	public final java.lang.Boolean getDevMode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.DevMode.toString());
	}

	/**
	 * Set value of DevMode
	 * @param devmode
	 */
	public final void setDevMode(java.lang.Boolean devmode)
	{
		setDevMode(getContext(), devmode);
	}

	/**
	 * Set value of DevMode
	 * @param context
	 * @param devmode
	 */
	public final void setDevMode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean devmode)
	{
		getMendixObject().setValue(context, MemberNames.DevMode.toString(), devmode);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return toggleButtonsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final native_widgets.proxies.ToggleButtons that = (native_widgets.proxies.ToggleButtons) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Native_Widgets.ToggleButtons";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
